#+title: Teste
r Errors

* ./tester
OK_TESTS:
Test  30: ‚ùå export HELLO-=123
Test  31: ‚ùå export =


FAILING_TESTS:
export HELLO=123 A
export ECHO=echo
then
$ECHO

e"c"h"o
* ./tester builtins
- Test  26: ‚ùå export A-
  - mini exit code = 0
  - bash exit code = 1
- Test  30: ‚ùå export HELLO-=123
  - mini exit code = 0
  - bash exit code = 1
- Test  31: ‚ùå export =
  - mini exit code = 0
  - bash exit code = 1
- Test  32: ‚ùå export 123
  - mini exit code = 0
  - bash exit code = 1


* ./tester redirects
** ok
- Test  68: ‚úÖ‚ö†Ô∏è  echo <"./test_files/infile_big" | echo <"./test_files/infile"
- mini error = ()
- bash error = ( Broken pipe)
- Test  71: ‚úÖ‚ö†Ô∏è  cat <"./test_files/infile" | echo hi
- mini error = ()
- bash error = ( Broken pipe)
** to fix
- Test  73: ‚ùå cat <"./test_files/infile" | echo hi
  - mini exit code = 1
  - bash exit code = 0
- Test  75: ‚ùå cat <"./test_files/infile_big" | echo hi
  - mini exit code = 1
  - bash exit code = 0
* tester extras
- Test   2: ‚ùå $PWD
  - mini exit code = 1
  - bash exit code = 126
  - mini error = ( Permission denied)
  - bash error = ( Is a directory)
- Test   3: ‚ùå $EMPTY
  - mini exit code = 1
  - bash exit code = 0
  - mini error = ( Permission denied)
  - bash error = ()
- Test   4: ‚ùå $EMPTY echo hi
  - mini output = ()
  - bash output = (hi)
  - mini exit code = 1
  - bash exit code = 0
  - mini error = ( Permission denied)
  - bash error = ()
- Test   5: ‚ùå ./test_files/invalid_permission
  - mini exit code = 1
  - bash exit code = 126
- Test  10: ‚ùå ./test_files
  - mini exit code = 1
  - bash exit code = 126
  - mini error = ( Permission denied)
  - bash error = ( Is a directory)
10/15
üò≠ üò≠ üò≠
* tester os_specific
- Test   8: ‚ùå exit 9223372036854775808
  - mini exit code = 0
  - bash exit code = 2
  - mini error = ()
  - bash error = ( numeric argument required)
- Test  11: ‚ùå exit -9223372036854775809
  - mini exit code = 255
  - bash exit code = 2
  - mini error = ()
  - bash error = ( numeric argument required)
- Test   3: ‚ùå export HELLO=123 A- WORLD=456
  - mini exit code = 0
  - bash exit code = 1
- Test   5: ‚ùå export UNO=1 DOS-2 TRES=3 || env | grep TRES
  - mini output = ()
  - bash output = (TRES=3)
* ./tester bonus
Test   2: ‚ùå cat <minishell.h&ls
mini output = ()
bash output = (bash_outfiles bash.supp bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfile01 outfiles pipes README.md redirects syntax tester test_files wildcards)
mini exit code = 1
bash exit code = 0
Test   5: ‚ùå &
mini exit code = 127
bash exit code = 2
mini error = ( &)
bash error = ( syntax error near unexpected token `&')
Test   8: ‚ùå *
mini exit code = 0
bash exit code = 127
mini error = ()

Test  19: ‚ùå << *
mini exit code = 2
bash exit code = 0
* ./tester wildcards
Test   8: ‚ùå echo "*"
mini output = (bash.supp bash_outfiles bonus bonus_bonus builtins extras local.supp loop.out manual_tests mini_outfiles os_specific outfiles pipes README.md redirects syntax test_files tester wildcards)
bash output = (*)
Test   9: ‚ùå "*"
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)
Test  10: ‚ùå manual*
mini exit code = 0
bash exit code = 127
mini error = ()
bash error = ( command not found)
Test  16: ‚ùå echo "pip*"
mini output = (pipes)
bash output = (pip*)
