#+title: Comments Kay

* change meaning of data->exit
- instead of
  #+begin_src c
while (data->exit)
  #+end_src
  write
  #+begin_src c
while (data->exit)
  #+end_src

- set exit to true, if "exit" was encountered

* purpose of meeting line - rename to create_prompt/get_prompt
-

* TokenTypes
- add identifiers
- add keywords
- add numbers

* Lexer should not be concerned with the DataStructure
- the lexer is there to give you back the tokens in a certain way
  - yes, can be an array of tokens, a list of tokens or a double linked list
  - but prefereably it just gives you the tokens one after the other, and the caller decides in which DataStructure the tokens should be saved in
    - this way we have a seperation of concerns
    - gives us the power to change the data structure afterwards, without changing the internals of the lexer (tokenizer)

* expressions and statements in bash

** built-in statement
- expressions produce values
#+begin_example
echo "some text"
built-in <expression>
#+end_example

#+begin_src js-json
{
        type: "builtin-statement",
        token: "echo"
        value: {
                type: "expression"
        }
}
#+end_src

- series of statements that can be connected in specific ways
  ("&&", "||", "|")

** either absolute path / executable / built-in / an Operator like > >> < <<
